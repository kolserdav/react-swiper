{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["getDefaultSwipe","id","Math","children","React","refs","animated","prePrev","postNext","oldSwipes","startTime","Date","Swiper","props","dots","useState","containerRef","useRef","_defaultCurrent","swipes","useMemo","prev","current","next","map","item","getSwipes","getRef","createRef","setGoClassHandler","_next","s","_prev","setTimeout","setBackClassHandler","wait","a","Promise","resolve","swipe","speed","setLoad","currentId","width","_lastLeft","setLeft","onSwipe","windowWidth","clear","setInterval","clearInterval","getTime","setPrev","setCurrent","setNext","undefined","onTouchHandler","touches","clientX","clientY","startClientX","startClientY","absY","lastLeft","absX","_left","onTouchWrapper","name","e","clickHandler","origin","isNext","leftVal","clickNextHandler","clickPrevHandler","resizeHandler","_width","_height","__left","_windowWidth","document","setWidth","setHeight","setWindowWidth","infitationAnimationHandler","shift","setStartCards","getNext","defaultCurrent","_n","getPrev","_p","startInvitationAnimation","clickDotHandler","target","tabindex","active","parseInt","useEffect","clearAnimate","buttonNext","buttonClose","_setLeft","invitationAnimation","isMobile","setIsMobile","window","navigator","setPreValues","d","className","ref","key","onTouchMove","onTouchStart","onTouchEnd","style","height","left","innerWidth","clsx","xmlns","viewBox","fill","type","disabled","load","onClick","role","tabIndex","old","getPrevios","App","blockSwipe","list","container","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.88c9aaa2.chunk.js","sourcesContent":["/******************************************************************************************\n * Repository: https://github.com/kolserdav/swiper.git\n * Author: Sergey Kolmiller\n * Email: <serega12101983@gmail.com>\n * License: MIT\n * License Text: The code is distributed as is. There are no guarantees regarding the functionality of the code or parts of it.\n * Copyright: kolserdav, All rights reserved (c)\n * Create date: Mon Nov 29 2021 16:18:08 GMT+0700 (Krasnoyarsk Standard Time)\n ******************************************************************************************/\nimport React, {\n  useMemo,\n  useState,\n  useRef,\n  createRef,\n  RefObject,\n  useEffect,\n  TouchEvent,\n  Fragment,\n  MouseEventHandler,\n} from 'react';\nimport clsx from 'clsx';\nimport s from './styles.module.css';\n\n/**\n * Time to miliseconds of change animation by card left value\n */\nexport const SWIPE_TRANSITION_TIMEOUT = 400;\n\n/**\n * Minimum swipe speed regardless of distance\n */\nexport const SWIPE_ON_EVENT_SPEED = 0.7;\n\n/**\n * One of swipe card\n */\nexport interface Swipe {\n  id: number | null;\n  nextRef?: RefObject<HTMLButtonElement | HTMLDivElement | undefined>;\n  closeRef?: RefObject<HTMLButtonElement | HTMLDivElement | undefined>;\n  children: React.ReactElement | React.ReactElement[];\n}\n\n/**\n * Callback for get next or previous card content\n */\nexport type GetSwipeHandler = (oldId: number) => Promise<Swipe>;\n\n/**\n * One of swipe card internal\n */\ninterface SwipeFull extends Swipe {\n  type: 'next' | 'current' | 'prev';\n}\n\n/**\n * Event touch name\n */\ntype TouchName = 'onTouchMove' | 'onTouchStart' | 'onTouchEnd';\n\n/**\n * Props of Swiper component\n */\ninterface SwiperProps {\n  /**\n   * Current card content\n   */\n  defaultCurrent: Swipe;\n\n  /**\n   * Get next card handler\n   */\n  getNext: GetSwipeHandler;\n\n  /**\n   * Get previous card handler\n   */\n  getPrev: GetSwipeHandler;\n\n  /**\n   * Class name for content block\n   */\n  className?: string;\n\n  /**\n   * invitation animation\n   */\n  // eslint-disable-next-line react/require-default-props\n  invitationAnimation?: boolean;\n\n  /**\n   * On swipe callback\n   */\n  // eslint-disable-next-line react/require-default-props\n  onSwipe?: (currentId: number | null | undefined) => void;\n\n  /**\n   * Auto slide if provieded\n   */\n  durationAnimation?: number;\n\n  /**\n   * Blocked swipe event\n   */\n  blockSwipe?: boolean;\n\n  /**\n   * Show dots\n   */\n  dots?: {\n    list: number[];\n    active: number;\n  };\n}\n\n/**\n * Create swipe list from values\n */\nconst getSwipes = (prev: Swipe, current: Swipe, next: Swipe, swipes: SwipeFull[]): SwipeFull[] => {\n  if (\n    (prev?.id === current?.id || current?.id === next?.id || next?.id === prev?.id) &&\n    swipes.length\n  ) {\n    return swipes;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const result: any[] = [1, 2, 3].map((id) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const item: any = id === 1 ? { ...prev } : id === 2 ? current : { ...next };\n    item.type = id === 1 ? 'prev' : id === 2 ? 'current' : 'next';\n    return item;\n  });\n  return result;\n};\n\n/**\n * Get default swipe with random id\n */\nconst getDefaultSwipe = (): Swipe => ({\n  id: Math.ceil(Math.random() * 1000),\n  children: <div />,\n});\n\nconst refs: {\n  [key: number]: RefObject<HTMLDivElement>;\n} = {};\n\nlet startClientX: number;\nlet startClientY: number;\nlet lastLeft: number;\nlet animated = false;\nlet prePrev: Swipe | null = null;\nlet postNext: Swipe | null = null;\nlet _defaultCurrent: Swipe;\nlet oldSwipes: SwipeFull[] = [];\nlet startTime = new Date().getTime();\n\n/**\n * Swiper component\n */\nexport const Swiper = (props: SwiperProps): React.ReactElement => {\n  const {\n    defaultCurrent,\n    getNext,\n    getPrev,\n    onSwipe,\n    className,\n    invitationAnimation,\n    durationAnimation,\n    blockSwipe,\n    dots,\n  } = props;\n\n  const [current, setCurrent] = useState<Swipe | null>();\n  const [prev, setPrev] = useState<Swipe | null>();\n  const [next, setNext] = useState<Swipe | null>();\n  const [windowWidth, setWindowWidth] = useState<number>(0);\n  const [height, setHeight] = useState<number>(0);\n  const [width, setWidth] = useState<number>(0);\n  const [_left, _setLeft] = useState<number>(0);\n  const [left, setLeft] = useState<number>(0);\n  const [isMobile, setIsMobile] = useState<boolean>();\n  const [load, setLoad] = useState<boolean>(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (typeof _defaultCurrent === 'undefined') {\n    _defaultCurrent = defaultCurrent;\n  }\n  /**\n   * Create memoized swipes\n   */\n  const swipes = useMemo(\n    () =>\n      getSwipes(\n        prev || getDefaultSwipe(),\n        current || defaultCurrent,\n        next || getDefaultSwipe(),\n        oldSwipes\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [next, prev, current]\n  );\n\n  oldSwipes = swipes;\n\n  /**\n   * Get new or exists ref by id\n   */\n  const getRef = (id: number): typeof refs[0] => {\n    refs[id] = refs[id] ? refs[id] : createRef<HTMLDivElement>();\n    return refs[id];\n  };\n\n  /**\n   * Set to cards classes for in animation\n   */\n  const setGoClassHandler = (_next?: Swipe, _prev?: Swipe): void => {\n    getRef(_next?.id || next?.id || 0).current?.classList.add(s.go);\n    getRef(_prev?.id || prev?.id || 0).current?.classList.add(s.go);\n    getRef(current?.id || 0).current?.classList.add(s.go);\n    setTimeout(() => {\n      getRef(_next?.id || next?.id || 0).current?.classList.remove(s.go);\n      getRef(_prev?.id || prev?.id || 0).current?.classList.remove(s.go);\n      getRef(current?.id || 0).current?.classList.remove(s.go);\n    }, SWIPE_TRANSITION_TIMEOUT);\n  };\n\n  /**\n   * Set to cards classes for out animation\n   */\n  const setBackClassHandler = (): void => {\n    getRef(next?.id || 0).current?.classList.add(s.back);\n    getRef(prev?.id || 0).current?.classList.add(s.back);\n    getRef(current?.id || 0).current?.classList.add(s.back);\n    setTimeout(() => {\n      getRef(next?.id || 0).current?.classList.remove(s.back);\n      getRef(prev?.id || 0).current?.classList.remove(s.back);\n      getRef(current?.id || 0).current?.classList.remove(s.back);\n    }, SWIPE_TRANSITION_TIMEOUT);\n  };\n\n  /**\n   * Wait helper\n   */\n  const wait = async (miliseconds: number): Promise<void> => {\n    await new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(0);\n      }, miliseconds);\n    });\n  };\n\n  /**\n   * Set pre previos or post next values\n   */\n  const setPreValues = (_p: Swipe | null | undefined, _n: Swipe | null | undefined) => {\n    if (_p) {\n      getPrev(_p?.id || 0).then((d) => {\n        prePrev = d;\n      });\n    }\n    if (_n) {\n      getNext(_n?.id || 0).then((d) => {\n        postNext = d;\n      });\n    }\n  };\n\n  /**\n   * Run swipe animation\n   */\n  const swipe = async ({\n    _lastLeft,\n    _next,\n    _prev,\n    speed,\n  }: {\n    _lastLeft: number;\n    _next?: Swipe;\n    _prev?: Swipe;\n    speed?: number;\n  }): Promise<1 | 0> => {\n    setLoad(true);\n    let startTime: number;\n    let currentId: number | null | undefined = 0;\n    if (Math.abs(_lastLeft) > width / 3 || (speed !== undefined && speed > SWIPE_ON_EVENT_SPEED)) {\n      if (_lastLeft < 0) {\n        if (next?.id === null) {\n          setBackClassHandler();\n          setLeft(0);\n          setLoad(false);\n          return 1;\n        }\n        currentId = _next?.id || next?.id;\n        if (onSwipe !== undefined) {\n          onSwipe(currentId);\n        }\n        setGoClassHandler(_next);\n        setLeft(windowWidth * -1);\n        startTime = new Date().getTime();\n        if (next?.id === postNext?.id) {\n          await new Promise((resolve) => {\n            const clear = setInterval(() => {\n              if (next?.id !== postNext?.id) {\n                clearInterval(clear);\n                resolve(0);\n              }\n            }, 0);\n          });\n        }\n        await wait(SWIPE_TRANSITION_TIMEOUT - (new Date().getTime() - startTime));\n        setLeft(0);\n        setPrev(current);\n        setCurrent(_next || next);\n        setNext(postNext);\n      } else {\n        if (prev?.id === null) {\n          setBackClassHandler();\n          setLeft(0);\n          setLoad(false);\n          return 1;\n        }\n        currentId = _prev?.id || prev?.id;\n        if (onSwipe !== undefined) {\n          onSwipe(currentId);\n        }\n        setGoClassHandler(undefined, _prev);\n        setLeft(windowWidth);\n        startTime = new Date().getTime();\n        if (prev?.id === prePrev?.id) {\n          await new Promise((resolve) => {\n            const clear = setInterval(() => {\n              if (prev?.id !== prePrev?.id) {\n                clearInterval(clear);\n                resolve(0);\n              }\n            }, 0);\n          });\n        }\n        await wait(SWIPE_TRANSITION_TIMEOUT - (new Date().getTime() - startTime));\n        setLeft(0);\n        setPrev(prePrev);\n        setCurrent(_prev || prev);\n        setNext(current);\n      }\n    } else {\n      setBackClassHandler();\n      setLeft(0);\n      setLoad(false);\n      return 1;\n    }\n    setLoad(false);\n    return 0;\n  };\n\n  /**\n   * Touch event handler\n   */\n  const onTouchHandler = async (name: TouchName, e: TouchEvent): Promise<void> => {\n    const { touches } = e;\n    const clientX = touches[0]?.clientX;\n    const clientY = touches[0]?.clientY;\n    startClientX = startClientX || 0;\n    startClientY = startClientY || 0;\n    let absX = 0;\n    let absY = 0;\n    switch (name) {\n      case 'onTouchStart':\n        startClientX = clientX;\n        startClientY = clientY;\n        lastLeft = _left;\n        startTime = new Date().getTime();\n        break;\n      case 'onTouchMove':\n        if (!blockSwipe) {\n          absY = Math.abs(startClientY - clientY);\n          absX = Math.abs(startClientX - clientX);\n          if (absX > absY) {\n            lastLeft = _left - (startClientX - clientX);\n            setLeft(lastLeft);\n          }\n        }\n        break;\n      case 'onTouchEnd':\n        if (!blockSwipe) {\n          await swipe({\n            _lastLeft: lastLeft,\n            speed: Math.abs(lastLeft / (new Date().getTime() - startTime)),\n          });\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Touch event wrapper\n   */\n  const onTouchWrapper =\n    (name: TouchName): ((event: TouchEvent<HTMLDivElement>) => void) =>\n    (e): void => {\n      onTouchHandler(name, e);\n    };\n\n  /**\n   * On next or previous button click handler\n   */\n  const clickHandler = (origin: 'next' | 'prev'): (() => Promise<1 | 0>) => {\n    const isNext = origin === 'next';\n    return async (): Promise<1 | 0> => {\n      const coeff = isNext ? -1 : 1;\n      const leftVal = width * coeff;\n      if (isNext) {\n        setGoClassHandler();\n      } else {\n        setBackClassHandler();\n      }\n      await wait(SWIPE_TRANSITION_TIMEOUT);\n      await swipe({\n        _lastLeft: leftVal,\n      });\n      return 0;\n    };\n  };\n\n  /**\n   * Wrapper for next button click handler\n   */\n  const clickNextHandler = clickHandler('next');\n\n  /**\n   * Wrapper for previous button click handler\n   */\n  const clickPrevHandler = clickHandler('prev');\n\n  const resizeHandler = (): void => {\n    const _width = containerRef?.current?.parentElement?.getBoundingClientRect()?.width;\n    const _height = containerRef?.current?.parentElement?.getBoundingClientRect()?.height;\n    const __left = containerRef?.current?.parentElement?.getBoundingClientRect()?.left;\n    const _windowWidth = document.body.clientWidth;\n    if (_width && _height) {\n      setWidth(_width);\n      setHeight(_height);\n    }\n    if (__left) {\n      setLeft(__left);\n    }\n    if (_windowWidth) {\n      setWindowWidth(_windowWidth);\n    }\n  };\n\n  /**\n   * optional animation handler\n   */\n  const infitationAnimationHandler = async (shift: number) => {\n    if (shift < 0) {\n      setGoClassHandler();\n    } else {\n      setBackClassHandler();\n    }\n    setLeft(shift);\n    await wait(SWIPE_TRANSITION_TIMEOUT);\n    if (shift < 0) {\n      setBackClassHandler();\n    } else {\n      setGoClassHandler();\n    }\n    setLeft(0);\n    await wait(SWIPE_TRANSITION_TIMEOUT);\n  };\n\n  /**\n   * Initial start cards\n   */\n  const setStartCards = async (): Promise<void> => {\n    const _n = await getNext(defaultCurrent.id || 0);\n    const _p = await getPrev(defaultCurrent.id || 0);\n    setCurrent(defaultCurrent);\n    setPrev(_p);\n    setNext(_n);\n    prePrev = await getPrev(_p.id || 0);\n    postNext = await getNext(_n.id || 0);\n    // setPreValues(_p, _n);\n    _defaultCurrent = defaultCurrent;\n    setLoad(false);\n  };\n\n  /**\n   * Invitation animation\n   */\n  const startInvitationAnimation = async (prev: Swipe, next: Swipe): Promise<void> => {\n    if (prev.id) {\n      await infitationAnimationHandler(windowWidth / 5.5);\n    }\n    if (next.id) {\n      await infitationAnimationHandler((windowWidth / 5.5) * -1);\n    }\n  };\n\n  /**\n   * Handler on click by dot\n   */\n  const clickDotHandler: MouseEventHandler<HTMLDivElement> = async (e: any) => {\n    const { target } = e;\n    const tabindex = target?.getAttribute('tabindex');\n    const active = parseInt(tabindex, 10);\n    const currId = current?.id || 0;\n    if (currId < active) {\n      const next = await getNext(active - 1);\n      setNext(next);\n      const prev = await getPrev(next?.id || 0);\n      await swipe({ _lastLeft: -1000, _prev: prev, _next: next });\n      postNext = await getNext(next?.id || 0);\n      prePrev = await getPrev(prev?.id || 0);\n      setPrev(prev);\n    } else {\n      const prev = await getPrev(active + 1);\n      setPrev(prev);\n      const next = await getNext(prev?.id || 0);\n      await swipe({ _lastLeft: 1000, _prev: prev, _next: next });\n      postNext = await getNext(next?.id || 0);\n      prePrev = await getPrev(prev?.id || 0);\n      setNext(next);\n    }\n  };\n\n  useEffect(() => {\n    let clearAnimate: NodeJS.Timeout;\n    if (durationAnimation) {\n      clearAnimate = setInterval(() => {\n        clickNextHandler();\n      }, durationAnimation);\n    }\n    const _width = containerRef?.current?.parentElement?.getBoundingClientRect()?.width;\n    const _height = containerRef?.current?.parentElement?.getBoundingClientRect()?.height;\n    const __left = containerRef?.current?.parentElement?.getBoundingClientRect()?.left;\n\n    const _windowWidth = document.body.clientWidth;\n    const buttonNext = current?.nextRef?.current;\n    const buttonClose = current?.closeRef?.current;\n    buttonNext?.addEventListener('click', clickNextHandler);\n    buttonClose?.addEventListener('click', clickNextHandler);\n    if (_width && !width && _height && !height) {\n      setWidth(_width);\n      setHeight(_height);\n    }\n    // save container left\n    if (__left && !left) {\n      _setLeft(__left);\n    }\n    // save window width\n    if (!windowWidth && _windowWidth) {\n      setWindowWidth(_windowWidth);\n    }\n    // set start cards\n    if (!current || !prev || !next || _defaultCurrent !== defaultCurrent) {\n      setStartCards();\n    }\n    // run invitation animation\n    if (invitationAnimation && width && !animated) {\n      if (prev && next) {\n        animated = true;\n        startInvitationAnimation(prev, next);\n      }\n    }\n    // set is mobile\n    if (typeof isMobile === 'undefined') {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      setIsMobile('ontouchstart' in window || typeof navigator?.msMaxTouchPoints !== 'undefined');\n    }\n    setPreValues(prev, next);\n    window.addEventListener('resize', resizeHandler);\n    return (): void => {\n      if (clearAnimate) {\n        clearInterval(clearAnimate);\n      }\n      window.removeEventListener('resize', resizeHandler);\n      buttonNext?.removeEventListener('click', clickNextHandler);\n      buttonClose?.removeEventListener('click', clickNextHandler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [next, defaultCurrent]);\n  return (\n    <div className={s.container} ref={containerRef}>\n      {/** absolute position cards */}\n      {swipes.map((item) => (\n        <Fragment key={item.id}>\n          {item.id !== null && item.children !== null && width && (\n            <div\n              onTouchMove={onTouchWrapper('onTouchMove')}\n              onTouchStart={onTouchWrapper('onTouchStart')}\n              onTouchEnd={onTouchWrapper('onTouchEnd')}\n              id={item.id?.toString()}\n              style={\n                item.type === 'current'\n                  ? { width, height, left }\n                  : item.type === 'prev'\n                  ? { width, height, left: left - window.innerWidth }\n                  : { width, height, left: left + window.innerWidth }\n              }\n              className={clsx(\n                s.card,\n                item.type === 'prev' ? s.prev : item.type === 'next' ? s.next : ''\n              )}\n              ref={getRef(item.id)}\n            >\n              {/** Block of content */}\n              <div className={clsx(s.content, className)}>{item.children}</div>\n            </div>\n          )}\n          {item.id === null && (\n            <div\n              style={\n                item.type === 'current'\n                  ? { width, height, left }\n                  : item.type === 'prev'\n                  ? { width, height, left: left - windowWidth }\n                  : { width, height, left: left + windowWidth }\n              }\n              className={clsx(\n                s.card,\n                item.type === 'prev' ? s.prev : item.type === 'next' ? s.next : ''\n              )}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                width=\"24px\"\n                fill=\"#000000\"\n              >\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\" />\n              </svg>\n            </div>\n          )}\n        </Fragment>\n      ))}\n      {typeof isMobile !== 'undefined' && !isMobile && prev?.id !== null && (\n        <div className={clsx(s.button, s.button__prev)}>\n          <button\n            className={s.icon__button}\n            type=\"button\"\n            disabled={load || isMobile}\n            onClick={clickPrevHandler}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              height=\"24px\"\n              viewBox=\"0 0 24 24\"\n              width=\"24px\"\n              fill=\"#000000\"\n            >\n              <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n              <path d=\"M10.02 6L8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z\" />\n            </svg>\n          </button>\n        </div>\n      )}\n      {typeof isMobile !== 'undefined' && !isMobile && next?.id !== null && (\n        <div className={clsx(s.button, s.button__next)}>\n          <button\n            className={s.icon__button}\n            type=\"button\"\n            disabled={load || isMobile}\n            onClick={clickNextHandler}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              height=\"24px\"\n              viewBox=\"0 0 24 24\"\n              width=\"24px\"\n              fill=\"#000000\"\n            >\n              <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n              <path d=\"M10.02 6L8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z\" />\n            </svg>\n          </button>\n        </div>\n      )}\n      {dots && (\n        <div className={s.dots}>\n          {dots.list.map((item) => (\n            <div\n              role=\"button\"\n              onClick={clickDotHandler}\n              tabIndex={item}\n              key={item}\n              className={clsx(s.dot, current?.id === item ? s.active : '')}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nSwiper.defaultProps = {\n  className: '',\n};\n","/******************************************************************************************\n * Repository: https://github.com/kolserdav/swiper.git\n * Author: Sergey Kolmiller\n * Email: <serega12101983@gmail.com>\n * License: MIT\n * License Text: The code is distributed as is. There are no guarantees regarding the functionality of the code or parts of it.\n * Copyright: kolserdav, All rights reserved (c)\n * Create date: Mon Nov 29 2021 16:18:08 GMT+0700 (Krasnoyarsk Standard Time)\n ******************************************************************************************/\nimport React, { useState, useEffect } from 'react';\nimport { Swiper, GetSwipeHandler, Swipe } from 'swiper';\nimport 'swiper/dist/index.css';\n\nconst COUNT = 4;\nconst LAG = 250;\n\nconst getNext: GetSwipeHandler = async (old) => {\n  let id: any = old + 1;\n  id = id <= COUNT ? id : null;\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        id,\n        children: <h1>Test {id}</h1>,\n      })\n    }, LAG)\n  });\n};\n\nconst getPrevios: GetSwipeHandler = async (old) => {\n  let id = old - 1;\n  id = id >= 0 ? id : COUNT;\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        id,\n        children: <h1>Test {id}</h1>,\n      })\n    }, LAG)\n  });\n};\n\nconst App = (): React.ReactElement => {\n  const [current, setCurrent] = useState<Swipe>();\n  useEffect(() => {\n    if (!current) {\n      (async () => {\n        setCurrent(await getNext(-1));\n      })();\n    }\n  }, [current]);\n\n  return (\n    <div className='container'>\n      {current && (\n        <Swiper\n          blockSwipe={false}\n          defaultCurrent={current}\n          getNext={getNext}\n          getPrev={getPrevios}\n          invitationAnimation={true}\n          className=\"card__content\"\n          dots={{\n            list: [0,1,2,3,4],\n            active: current.id || 1\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/******************************************************************************************\n * Repository: https://github.com/kolserdav/swiper.git\n * Author: Sergey Kolmiller\n * Email: <serega12101983@gmail.com>\n * License: MIT\n * License Text: The code is distributed as is. There are no guarantees regarding the functionality of the code or parts of it.\n * Copyright: kolserdav, All rights reserved (c)\n * Create date: Mon Nov 29 2021 16:18:08 GMT+0700 (Krasnoyarsk Standard Time)\n ******************************************************************************************/\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport { createRoot } from 'react-dom/client';\nconst container = document.getElementById('root') as HTMLElement;\nconst root = createRoot(container);\nroot.render(<App />);\n"],"sourceRoot":""}